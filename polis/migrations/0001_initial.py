# Generated by Django 5.0 on 2024-03-22 18:44

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="PolisConversation",
            fields=[
                ("zid", models.BigIntegerField(primary_key=True, serialize=False)),
                ("topic", models.TextField()),
                ("description", models.TextField()),
                ("upvotes", models.IntegerField()),
                ("participant_count", models.IntegerField()),
                ("is_anon", models.BooleanField()),
                ("is_active", models.BooleanField()),
                ("is_public", models.BooleanField()),
            ],
            options={
                "db_table": "conversations",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PolisParticipant",
            fields=[
                ("pid", models.BigIntegerField(primary_key=True, serialize=False)),
                ("vote_count", models.IntegerField()),
                ("created", models.DateTimeField()),
                ("last_interaction", models.DateTimeField()),
            ],
            options={
                "db_table": "participants",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PolisUser",
            fields=[
                ("uid", models.BigIntegerField(primary_key=True, serialize=False)),
                ("hname", models.TextField()),
                ("email", models.TextField()),
                ("site_id", models.TextField()),
                ("site_owner", models.BooleanField()),
            ],
            options={
                "db_table": "users",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Affinity",
            fields=[
                (
                    "name",
                    models.CharField(max_length=200, primary_key=True, serialize=False),
                ),
            ],
            options={
                "verbose_name": "Affinity",
                "verbose_name_plural": "Affinities",
            },
        ),
        migrations.CreateModel(
            name="Instance",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("url", models.CharField(max_length=200)),
                ("site_id", models.CharField(max_length=200)),
            ],
            options={
                "verbose_name": "Instance",
                "verbose_name_plural": "Instances",
            },
        ),
        migrations.CreateModel(
            name="Territory",
            fields=[
                (
                    "name",
                    models.CharField(max_length=200, primary_key=True, serialize=False),
                ),
            ],
            options={
                "verbose_name": "Territory",
                "verbose_name_plural": "Territories",
            },
        ),
        migrations.CreateModel(
            name="Conversation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("topic", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("start_date", models.DateTimeField()),
                ("end_date", models.DateTimeField()),
                ("border", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "border_radius",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("padding", models.CharField(blank=True, max_length=200, null=True)),
                ("height", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "ui_language",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("show_visualization", models.BooleanField(default=True)),
                ("show_share", models.BooleanField(default=True)),
                ("bg_white", models.BooleanField(default=False)),
                ("auth_needed_to_vote", models.BooleanField(default=False)),
                ("auth_needed_to_write", models.BooleanField(default=True)),
                ("auth_opt_fb", models.BooleanField(default=True)),
                ("auth_opt_tw", models.BooleanField(default=True)),
                (
                    "instance",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="polis.instance"
                    ),
                ),
            ],
            options={
                "verbose_name": "Conversation",
                "verbose_name_plural": "Conversations",
            },
        ),
        migrations.CreateModel(
            name="Participant",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("F", "Female"),
                            ("M", "Male"),
                            ("NB", "Non-Binary"),
                            ("TG", "Transgender"),
                            ("I", "Intersex"),
                            ("Q", "Queer"),
                            ("N", "Prefer Not to Say"),
                            ("O", "Other"),
                        ],
                        max_length=2,
                    ),
                ),
                ("year_of_birth", models.IntegerField()),
                (
                    "affinity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="polis.affinity"
                    ),
                ),
                (
                    "instance",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="polis.instance"
                    ),
                ),
                (
                    "territory",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="polis.territory",
                    ),
                ),
            ],
            options={
                "verbose_name": "Participant",
                "verbose_name_plural": "Participants",
                "ordering": ["instance", "affinity"],
            },
        ),
        migrations.CreateModel(
            name="PolisXid",
            fields=[
                (
                    "uid",
                    models.BigIntegerField(
                        db_column="uid", primary_key=True, serialize=False
                    ),
                ),
                ("x_profile_image_url", models.TextField()),
                ("x_name", models.TextField()),
                ("x_email", models.TextField()),
                ("created", models.DateTimeField()),
                ("modified", models.DateTimeField()),
                (
                    "xid",
                    models.ForeignKey(
                        db_column="xid",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="polis.participant",
                    ),
                ),
            ],
        ),
    ]
